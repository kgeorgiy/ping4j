plugins {
    id 'cpp-library'
    id 'cpp-unit-test'
}

library {
    targetMachines = [machines.windows.x86, machines.windows.x86_64]

    binaries.configureEach {
        def compileTask = compileTask.get()
        def linkTask = linkTask.get()

        compileTask.source.from fileTree(dir: "src/main/c", include: "**/*.c")
        if (toolChain instanceof VisualCpp) {
            compileTask.compilerArgs = ["/TC", "/W4", "/WX"]
            linkTask.linkerArgs = ["iphlpapi.lib"]
        } else if (toolChain instanceof GccCompatibleToolChain) {
            compileTask.compilerArgs = ["-x", "c", "-std=c99", "-Wall", "-Werror"]
            linkTask.linkerArgs = ["-liphlpapi"]
        }
    }
}

unitTest {
    targetMachines = [machines.windows.x86, machines.windows.x86_64]

    binaries.configureEach {
        def compileTask = compileTask.get()
        def linkTask = linkTask.get()

        compileTask.source.from fileTree(dir: "src/test/c", include: "**/*.c")

        if (toolChain instanceof VisualCpp) {
            compileTask.compilerArgs = ["/TC", "/W4", "/WX", "/wd4214"]
            linkTask.linkerArgs = ["iphlpapi.lib", "dnsapi.lib"]
        } else if (toolChain instanceof GccCompatibleToolChain) {
            compileTask.compilerArgs = ["-x", "c", "-std=c99", "-Wall", "-Werror"]
            linkTask.linkerArgs = ["-liphlpapi", "-ldnsapi"]
        }
    }
}

model {
    toolChains {
        visualCpp(VisualCpp)
        gcc(Gcc)
    }
}
